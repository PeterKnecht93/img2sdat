#!/usr/bin/env python3

import os
import common, blockimgdiff, images, sparse_img

def main(INPUT_IMAGE, CACHE_SIZE, OUT_DIR):
    __version__ = '2.0'
    print('img2sdat binary - version: %s' % __version__)

    if not os.path.isdir(OUT_DIR):
        os.makedirs(OUT_DIR)

    OUT_FILE = os.path.join(OUT_DIR, os.path.splitext(os.path.basename(INPUT_IMAGE))[0])

    common.OPTIONS.cache_size = CACHE_SIZE

    # Construct image
    if common.IsSparseImage(INPUT_IMAGE):
        image = sparse_img.SparseImage(INPUT_IMAGE, clobbered_blocks='0')
    else:
        image = images.FileImage(INPUT_IMAGE)

    # Generate Android data image
    print('- Generating Android data image...')
    b = blockimgdiff.BlockImageDiff(image, disable_imgdiff=True)
    b.Compute(OUT_FILE)

    print(f'\nDone! Output directory: {OUT_DIR}')
    return

if __name__ == '__main__':
    import argparse

    parser = argparse.ArgumentParser(description='A tool to convert filesystem images into sparse Android data images.')

    parser.add_argument('image', help='input partition image')
    parser.add_argument('-c', '--cache-size', default=4 * 4096, type=int, help='cache partition size')
    parser.add_argument('-o', '--outdir', default='./', help='output directory (current directory by default)')

    args = parser.parse_args()

    main(args.image, args.cache_size, args.outdir)
